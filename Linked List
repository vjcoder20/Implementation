class MyLinkedList {
    
        Node head;
        Node tail;
        int size;
    
    public class Node{
        int data;
        Node next;
        
        Node(int data){
            this.data = data;
            this.next = null;
        }
        
    }

    public MyLinkedList() {
        this.head = null;
        this.tail = null;
        this.size = 0;
    }
    
    public int getSize(){
    return size;
    }
    
    public void display(){
       
        Node curr = head;
        while(curr!=null){
            System.out.print(curr.data+" ");
            curr = curr.next;
        }
        System.out.println();
    }
    
    public int get(int index) {
       if(index<0 || index>=size){
           return -1;
       }
        
    Node curr = head;
    while(index-- > 0){
        curr = curr.next;
    }
        return curr.data;
    }
    
    public Node getNodeAt(int index){
        Node curr = head;
        while(index-- > 0){
            curr = curr.next;
        }
        
        return curr;
    }
    
    public void addAtHead(int val) {
        Node n = new Node(val);
        n.next = head;
        head = n;
        
        if(size==0)
        tail = n;
        
        size++;
    }
    
    public void addAtTail(int val) {
        Node n = new Node(val);
        if(size==0){
            head=tail=n;
        }
        else{
            tail.next = n;
            tail = n;
        }
        size++;
    }
    
    public void addAtIndex(int index, int val) {
          if(index < 0 || index > size) return;
        
        if(index == 0){
            addAtHead(val);
        }
        else if(index == size){
            addAtTail(val);   
        }
        
        else{
            Node n = new Node(val);
            Node prev = getNodeAt(index-1);
            Node forw = prev.next;
            prev.next = n;
            n.next = forw;
            size++;
        }
    }
    
    public void deleteFirst(){
        if(size==0){
            return;
        }
        else if(size==1){
            head=tail=null;
            size = 0;
        }
        else{
        head = head.next;
        size--;
        }
    }
    
    public void deleteLast(){
       if(size==0){
            return;
        }
        else if(size==1){
            head=tail=null;
            size = 0;
        }
        else{
             Node secondLast = getNodeAt(size-2);
             secondLast.next = null;
                tail = secondLast;
            size--;
        }
        
    }
    
    public void deleteAtIndex(int index) {
        if(index < 0 || index >= size) return;
        
        if(index == 0){
            deleteFirst();
        }
        else if(index == size-1){
            deleteLast();   
        }
        else{
            Node prev = getNodeAt(index-1);
            Node curr = prev.next;
            Node forw = curr.next;
            prev.next = forw;
            size--;
        }
    }
}
